{{!< default}}
{{!--
/**
 * Uncertainty Project
 * Developed by Engagement Lab, 2016
 * ==============
 *
 * Script include for global logic
 * ==========
 */
--}}

<script>
  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
  })(window,document,'script','https://www.google-analytics.com/analytics.js','ga');

  ga('create', 'UA-105328437-1', 'auto');
  ga('send', 'pageview');

</script>

<script type="text/javascript">
    window.smartlook||(function(d) {
    const o=smartlook=function(){ o.api.push(arguments)},h=d.getElementsByTagName('head')[0];
    const c=d.createElement('script');o.api=new Array();c.async=true;c.type='text/javascript';
    c.charset='utf-8';c.src='https://rec.smartlook.com/recorder.js';h.appendChild(c);
    })(document);
    smartlook('init', '08fcf2654b0e2beceb4f6ba482e42047e47d25fe');
</script>

<script type="text/javascript">

let playing = false
const sfxPath = '/sfx/'

$(document).ready(function() {

	let windowsize = $(window).width(),
		bodysize = $('#wrapper').width(),
		wrapperLeft = $('#wrapper').offset().left,
		extraWindow = (windowsize - bodysize)/2;

	// cached selectors
	$error = $('.error');

	const imageLoaded = function(parentElem, callback) {

	  parentElem.find('img').first().on('load', function() {

	    // Image loaded, callback fires
	    callback();

	  })
	  .each(function() {

	    // Force image to dispatch 'load' (cache workaround)
	    if(this.complete) $(this).load();

	  });

	};

	const getScript = function(str) {

	    $.getScript( '/js/' + str + '.js' )
        .done(function( script, textStatus ) {
        	console.log('success');
        })
        .fail(function( jqxhr, settings, exception ) {
            console.error('Unable to load (error: "%s")',  exception);
        });

	}

	setTimeout(function () {

	    $('.login #login').fadeIn();

	}, 1000);


	const finishResize = function() {

		// Show wrapper now that resize is complete
		$('#wrapper').css('visibility', 'visible');

	}

	const setAbsolutes = function(absolutes) {

		if (absolutes.length == 0) {
			// Call finish function after xxx milaseconds
			const finish = _.debounce(finishResize, 500);
			finish();
			return;
		}

		const length = absolutes.length;

		_.each(absolutes, function(item, ind) {

			const position = {};

			// // Check current positions
			// if ($(item).css('left') !== undefined && $(item).css('left') !== null && $(item).css('left') !== 'auto' && $(item).css('left')) {
			// 	position.left = $(item).css('left');
			// }

			// if ($(item).css('right') !== undefined &&$(item).css('right') !== null && $(item).css('right') !== 'auto' && $(item).css('right')) {
			// 	position.right = $(item).css('right');
			// }

			// // If left, set it.
			// if (position.left){
			// 	$(item).css('left', wrapperLeft);
			// }
			// //If right, set it.
			// if (position.right) {
			// 	position.right =+ extraWindow;
			// 	$(item).css('right', position.right);
			// }

			if (ind == length - 1) {
				// Call finish function after xxx milaseconds
				const finish = _.debounce(finishResize, 500);
				finish();

			}

		});

	};

	// Locally-scoped methods
	const findAbsolutes = function() {

		windowsize = $(window).width(),
		bodysize = $('#wrapper').width(),
		wrapperLeft = $('#wrapper').offset().left,
		extraWindow = (windowsize - bodysize)/2,

		slideheight = $(window).height() - 260;

		$('.item:not(.open)').height(slideheight);

		$('.alert img').each(function(i) {
		    if ($(this).hasClass('cld-responsive')) {
		        $(this).removeClass('cld-responsive');
		        $(this).attr('src', $(this).data('src'));
		    }
		});

		// Get all absolutely-positioned elements
		const outerAbsolutes =
		$('#wrapper :not(.leaderboard, .subsection, .section, .tinderslide *, .buttons, .nav-bar, .alert *, .glide *, .modal)')
		.filter(function(){
		  return ($(this).css('position') == 'absolute');
		});

		setAbsolutes(outerAbsolutes);

	};

	findAbsolutes();

	$(window).on('resize', function () {

		// Hide content wrapper during resize
		$('#wrapper').css('visibility' ,'hidden');

		// Adjust absolutely-position elements for desktop only
		findAbsolutes();

	});

	$('#password_input').keydown(function(evt) {

        if(evt.keyCode == 13)
            $('#login-form').trigger('submit');

    });

    $('#email_input').keydown(function(evt) {

        if(evt.keyCode == 13)
            $('#login-form').trigger('submit');

    });

	$('#login-form').on('submit', event => {
		event.preventDefault();
		$error.hide().html('')
		const data = getLoginFormData(event.target)

		if (!data.password || !data.email) {
			const msg = !data.password && !data.email ?
				'You must fill out your password and email.' :
					!data.password ? 'You must fill out your password.' :
							'You must fill out your email.'

			$error.html(msg).fadeIn()

		} else {
			console.log("checking login info");

			handleLoginRequest(data)
		}

	})

	const handleLoginRequest = formData => {
		$.ajax({
			url: '/api/login/',
			method: 'post',
			data: formData
		})
			.then(res => {
				// send the user to the logged in view
				window.location = res
			})
			.fail(err => {
				$error.html(err.msg).fadeIn()
				$('#case-sensitive').fadeIn()
			})
	}

	const getLoginFormData = form => {
		return {
			email: $(form).find('[type="email"]').val(),
			password: $(form).find('[type="password"]').val()
		}
	}

	$('.demo-menu input[data-demo]').on('click', event => {
		$error.fadeOut(()=>$error.html(''))
		const data = {
			email: 'player@student.edu',
			password: 'password'
		}
		handleLoginRequest(data)
	})

	$('input[name="demo"]').on('click', event => {
		$('#login form').hide()
		$('.demo-menu').show()
	})

	$('input[name="back"]').on('click', event => {
		$('#login form').show()
		$('.demo-menu').hide()
	})
});

{{#ifeq section 'game'}}

	{{>script/game}}

{{/ifeq}}

</script>

